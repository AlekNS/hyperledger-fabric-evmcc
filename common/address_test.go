package common

import (
	"testing"

	"github.com/JincorTech/hyperledger-fabric-evmcc/burrow/word256"

	"github.com/stretchr/testify/assert"
)

func TestSuccessGetEtheriumLikeAddress(t *testing.T) {
	addressBytes, _ := GetEtheriumLikeAddressAsBytes([]byte{
		0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38,
		0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31,
		0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30,
		0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30, 0x31, 0x32, 0x33,
	})
	assert.Equal(t, []byte{
		0x47, 0xe7, 0x73, 0x18, 0x60, 0xea, 0x4b, 0xee, 0x2c, 0x1a, 0x89, 0xc1, 0x22, 0x3f, 0x5c, 0x0a, 0x8b, 0x32, 0x40, 0x46,
	}, addressBytes)
}

func TestFailGetEtheriumLikeAddress(t *testing.T) {
	_, err := GetEtheriumLikeAddressAsBytes(nil)
	assert.Error(t, err, "Data can't be null for address transformation")
}

func TestSuccessGetEtheriumLikeAddressAsString(t *testing.T) {
	address, _ := GetEtheriumLikeAddress("0123456789012345678901234567890123456789012345678901234567890123")
	assert.Equal(t, word256.Word256{
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0x47, 0xe7, 0x73, 0x18, 0x60, 0xea, 0x4b, 0xee, 0x2c, 0x1a,
		0x89, 0xc1, 0x22, 0x3f, 0x5c, 0x0a, 0x8b, 0x32, 0x40, 0x46,
	}, address)
}
